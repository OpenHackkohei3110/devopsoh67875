name: "Deploy - IaC (Terraform)"

# run on push to main branch only
on:
  push:
    branches:
      - main
    paths:
      - "iac/terraform/**"
  workflow_dispatch:

# Set envs
env:
  WORKDIR: "iac/terraform"
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

# Set defaults for GitHub Actions runner
defaults:
  run:
    working-directory: "iac/terraform"

jobs:
  preview:
    name: "Preview Changes"
    runs-on: ubuntu-latest
    outputs:
      RESOURCES_PREFIX: ${{ steps.resources_prefix.outputs.result }}

    steps:
      # Checkout the repository to the GitHub Actions runner 
      - name: Checkout
        uses: actions/checkout@v2

      # Get RESOURCES_PREFIX based on the repo name
      - name: Get repo name
        uses: actions/github-script@v5
        id: resources_prefix
        with:
          result-encoding: string
          script: return context.repo.repo.toLowerCase()

      # Login to Azure with Service Principal
      - name: "Login to Azure"
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Get Secret from Key Vault
      - name: Azure CLI script file
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az keyvault secret show --vault-name devopsoh67875kv --name SQL-PASSWORD | grep value | head -1 | cut -d'"' -f4
        id: get-secret

      # Preview changes
      - name: "What-If"
        run: |
          terraform init -backend-config="storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.TFSTATE_STORAGE_CONTAINER_NAME }}" -backend-config="key=${{ secrets.TFSTATE_KEY }}" -backend-config="resource_group_name=${{ secrets.TFSTATE_RESOURCES_GROUP_NAME }}"
          terraform plan -var="resources_prefix=${{ steps.resources_prefix.outputs.result }}" -var="location=${{ secrets.LOCATION }}" -var="mssql_server_administrator_login_password=${{ steps.get-secret.outputs.result }}" -no-color | grep --line-buffered -E '^\S+|^\s{,2}(\+|-|~|-/\+) |^\s<=|^Plan'

  deploy:
    name: "Deploy"
    needs: preview
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Get RESOURCES_PREFIX based on the repo name
      - name: Get repo name
        uses: actions/github-script@v5
        id: resources_prefix
        with:
          result-encoding: string
          script: return context.repo.repo.toLowerCase()

      - name: "Login to Azure"
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Get Secret from Key Vault
      - name: Azure CLI script file
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az keyvault secret show --vault-name devopsoh67875kv --name SQL-PASSWORD | grep value | head -1 | cut -d'"' -f4
        id: get-secret

      # Deploy
      - name: "Deployment"
        run: |
          terraform init -backend-config="storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.TFSTATE_STORAGE_CONTAINER_NAME }}" -backend-config="key=${{ secrets.TFSTATE_KEY }}" -backend-config="resource_group_name=${{ secrets.TFSTATE_RESOURCES_GROUP_NAME }}" 
          terraform apply --auto-approve -var="location=${{ secrets.LOCATION }}" -var="resources_prefix=${{ steps.resources_prefix.outputs.result }}" -var="mssql_server_administrator_login_password=${{ steps.get-secret.outputs.result }}"
