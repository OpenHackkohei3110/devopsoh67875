name: "Build Docker image (Terraform)"

on:
  push:
    branches:
      - main
    paths:
      - "apis/user-java/**"
      - ".github/workflows/**"
  workflow_dispatch:

# Set envs
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  RESOURCE_PREFIX: ${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}
  API_NAME: "user-java"
  
defaults:
  run:
    working-directory: "apis/${{ env.API_NAME }}"

jobs:
  build-image:
    name: "Build Docker image (Terraform)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Login to Azure with Service Principal
      - name: "Login to Azure"
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Docker login"
        uses: azure/docker-login@v1
        with:
          login-server: "${{ env.RESOURCE_PREFIX }}cr.azurecr.io"
          username: ${{ secrets.ARM_CLIENT_ID }}
          password: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: "Docker Build and Push"
        run: |
          docker build . -t ${{ env.RESOURCE_PREFIX }}cr.azurecr.io/devopsoh/api-${{ env.API_NAME }}:${{github.run_id}}
          docker push ${{ env.RESOURCE_PREFIX }}cr.azurecr.io/devopsoh/api-${{ env.API_NAME }}:${{github.run_id}}

      # deploy api code to App Service staging slot
      - name: "deploy to webapps"
        id: deploy-to-webapps
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ env.RESOURCE_PREFIX }}userjava"
          # slot-name: staging
          images: ${{ env.RESOURCE_PREFIX }}cr.azurecr.io/devopsoh/api-${{ env.API_NAME }}:${{github.run_id}}