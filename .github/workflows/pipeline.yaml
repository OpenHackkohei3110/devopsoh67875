name: validation
on: 
  pull_request:
    branches:
      - main
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
jobs:
  lint:
    name: "lint code"
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Lint terraform
      uses: actionshub/terraform-lint@main
  validate:
    needs: lint
    name: "terraform validate"
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - uses: hashicorp/setup-terraform@v2

    - run: terraform init -backend-config="storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.TFSTATE_STORAGE_CONTAINER_NAME }}" -backend-config="key=${{ secrets.TFSTATE_KEY }}" -backend-config="resource_group_name=${{ secrets.TFSTATE_RESOURCES_GROUP_NAME }}"
      working-directory: iac/terraform

    - name: Validate
      run: terraform validate -no-color
      working-directory: iac/terraform

name: deployment
on:
  push:
    branches:
      - main
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
jobs:
  plan:
    needs: plan
    name: "Terraform plan"
    runs-on: ubuntu-latest
    steps:
    - run: sudo apt-get install -y dnsutils  # myip.sh

    - id: plan
      name: Plan
      run: terraform plan -lock=false -var="resources_prefix=poko" -var="location=${{ secrets.LOCATION }}" -no-color
      working-directory: iac/terraform

    - name: Comment
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `${{ steps.plan.outputs.stdout }}`
          })